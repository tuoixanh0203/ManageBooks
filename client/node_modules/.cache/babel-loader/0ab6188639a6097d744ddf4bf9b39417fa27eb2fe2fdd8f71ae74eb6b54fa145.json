{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Web\\\\GRAPHQL\\\\client\\\\src\\\\components\\\\Forms.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BookForm from \"./BookForm\";\nimport AuthorForm from \"./AuthorForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forms = () => {\n  _s();\n  const [newBook, setNewBook] = useState({\n    name: '',\n    genre: '',\n    authorId: ''\n  });\n  const {\n    name,\n    genre,\n    authorId\n  } = newBook;\n  const onInputChange = event => {\n    setNewBook({\n      ...newBook,\n      [event.target.name]: event.target.value\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    addBook({\n      variables: {\n        name,\n        genre,\n        authorId\n      },\n      refetchQueries: [{\n        query: getBooks\n      }]\n    });\n    setNewBook({\n      name: '',\n      genre: '',\n      authorId: ''\n    });\n  };\n\n  // GraphQL operations\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthors);\n  const [addBook, dataMutation] = useMutation(addSingleBook);\n  console.log(dataMutation);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(BookForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(AuthorForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n_s(Forms, \"I1NM8VmtgwlHkm/pACmywvzs7do=\", true);\n_c = Forms;\nexport default Forms;\nvar _c;\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","Row","Col","BookForm","AuthorForm","Forms","newBook","setNewBook","useState","name","genre","authorId","onInputChange","event","target","value","onSubmit","preventDefault","addBook","variables","refetchQueries","query","getBooks","loading","error","data","useQuery","getAuthors","dataMutation","useMutation","addSingleBook","console","log"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/client/src/components/Forms.js"],"sourcesContent":["import React from \"react\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport BookForm from \"./BookForm\";\r\nimport AuthorForm from \"./AuthorForm\";\r\n\r\nconst Forms = () => {\r\n    const [newBook, setNewBook] = useState({\r\n        name: '',\r\n        genre: '',\r\n        authorId: ''\r\n    })\r\n\r\n    const {name, genre, authorId} = newBook\r\n\r\n    const onInputChange = event => {\r\n        setNewBook({\r\n            ...newBook,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        addBook({\r\n            variables: {name,genre,authorId},\r\n            refetchQueries: [{query: getBooks}]\r\n        })\r\n\r\n        setNewBook({name: '', genre: '', authorId: ''})\r\n    }\r\n\r\n    // GraphQL operations\r\n    const {loading, error, data} = useQuery(getAuthors)\r\n    \r\n    const [addBook, dataMutation] = useMutation(addSingleBook)\r\n\r\n    console.log(dataMutation)\r\n\r\n    return <Row>\r\n        <Col>\r\n            <BookForm />\r\n        </Col>\r\n        <Col>\r\n            <AuthorForm></AuthorForm>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default Forms"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAErC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC;IACnCC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM;IAACF,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGL,OAAO;EAEvC,MAAMM,aAAa,GAAGC,KAAK,IAAI;IAC3BN,UAAU,CAAC;MACP,GAAGD,OAAO;MACV,CAACO,KAAK,CAACC,MAAM,CAACL,IAAI,GAAGI,KAAK,CAACC,MAAM,CAACC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,QAAQ,GAAGH,KAAK,IAAI;IACtBA,KAAK,CAACI,cAAc,EAAE;IAEtBC,OAAO,CAAC;MACJC,SAAS,EAAE;QAACV,IAAI;QAACC,KAAK;QAACC;MAAQ,CAAC;MAChCS,cAAc,EAAE,CAAC;QAACC,KAAK,EAAEC;MAAQ,CAAC;IACtC,CAAC,CAAC;IAEFf,UAAU,CAAC;MAACE,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAM;IAACY,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGC,QAAQ,CAACC,UAAU,CAAC;EAEnD,MAAM,CAACT,OAAO,EAAEU,YAAY,CAAC,GAAGC,WAAW,CAACC,aAAa,CAAC;EAE1DC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EAEzB,oBAAO,QAAC,GAAG;IAAA,wBACP,QAAC,GAAG;MAAA,uBACA,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACV,eACN,QAAC,GAAG;MAAA,uBACA,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IAAc;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AACV,CAAC;AAAA,GA1CKvB,KAAK;AAAA,KAALA,KAAK;AA4CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}