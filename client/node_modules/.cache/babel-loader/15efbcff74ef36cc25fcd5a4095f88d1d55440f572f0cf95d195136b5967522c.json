{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBuiltInForStub = exports.isNamedStub = exports.createStub = exports.createNamedStub = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction createNamedStub(name, type) {\n  let constructor;\n  if (type === 'object') {\n    constructor = graphql_1.GraphQLObjectType;\n  } else if (type === 'interface') {\n    constructor = graphql_1.GraphQLInterfaceType;\n  } else {\n    constructor = graphql_1.GraphQLInputObjectType;\n  }\n  return new constructor({\n    name,\n    fields: {\n      _fake: {\n        type: graphql_1.GraphQLString\n      }\n    }\n  });\n}\nexports.createNamedStub = createNamedStub;\nfunction createStub(node, type) {\n  switch (node.kind) {\n    case graphql_1.Kind.LIST_TYPE:\n      return new graphql_1.GraphQLList(createStub(node.type, type));\n    case graphql_1.Kind.NON_NULL_TYPE:\n      return new graphql_1.GraphQLNonNull(createStub(node.type, type));\n    default:\n      if (type === 'output') {\n        return createNamedStub(node.name.value, 'object');\n      }\n      return createNamedStub(node.name.value, 'input');\n  }\n}\nexports.createStub = createStub;\nfunction isNamedStub(type) {\n  if ('getFields' in type) {\n    const fields = type.getFields();\n    // eslint-disable-next-line no-unreachable-loop\n    for (const fieldName in fields) {\n      const field = fields[fieldName];\n      return field.name === '_fake';\n    }\n  }\n  return false;\n}\nexports.isNamedStub = isNamedStub;\nfunction getBuiltInForStub(type) {\n  switch (type.name) {\n    case graphql_1.GraphQLInt.name:\n      return graphql_1.GraphQLInt;\n    case graphql_1.GraphQLFloat.name:\n      return graphql_1.GraphQLFloat;\n    case graphql_1.GraphQLString.name:\n      return graphql_1.GraphQLString;\n    case graphql_1.GraphQLBoolean.name:\n      return graphql_1.GraphQLBoolean;\n    case graphql_1.GraphQLID.name:\n      return graphql_1.GraphQLID;\n    default:\n      return type;\n  }\n}\nexports.getBuiltInForStub = getBuiltInForStub;","map":{"version":3,"names":["Object","defineProperty","exports","value","getBuiltInForStub","isNamedStub","createStub","createNamedStub","graphql_1","require","name","type","constructor","GraphQLObjectType","GraphQLInterfaceType","GraphQLInputObjectType","fields","_fake","GraphQLString","node","kind","Kind","LIST_TYPE","GraphQLList","NON_NULL_TYPE","GraphQLNonNull","getFields","fieldName","field","GraphQLInt","GraphQLFloat","GraphQLBoolean","GraphQLID"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/utils/cjs/stub.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBuiltInForStub = exports.isNamedStub = exports.createStub = exports.createNamedStub = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql_1.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql_1.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql_1.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql_1.GraphQLString,\n            },\n        },\n    });\n}\nexports.createNamedStub = createNamedStub;\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(createStub(node.type, type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nexports.createStub = createStub;\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nexports.isNamedStub = isNamedStub;\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql_1.GraphQLInt.name:\n            return graphql_1.GraphQLInt;\n        case graphql_1.GraphQLFloat.name:\n            return graphql_1.GraphQLFloat;\n        case graphql_1.GraphQLString.name:\n            return graphql_1.GraphQLString;\n        case graphql_1.GraphQLBoolean.name:\n            return graphql_1.GraphQLBoolean;\n        case graphql_1.GraphQLID.name:\n            return graphql_1.GraphQLID;\n        default:\n            return type;\n    }\n}\nexports.getBuiltInForStub = getBuiltInForStub;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,UAAU,GAAGJ,OAAO,CAACK,eAAe,GAAG,KAAK,CAAC;AACvG,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,SAASF,eAAe,CAACG,IAAI,EAAEC,IAAI,EAAE;EACjC,IAAIC,WAAW;EACf,IAAID,IAAI,KAAK,QAAQ,EAAE;IACnBC,WAAW,GAAGJ,SAAS,CAACK,iBAAiB;EAC7C,CAAC,MACI,IAAIF,IAAI,KAAK,WAAW,EAAE;IAC3BC,WAAW,GAAGJ,SAAS,CAACM,oBAAoB;EAChD,CAAC,MACI;IACDF,WAAW,GAAGJ,SAAS,CAACO,sBAAsB;EAClD;EACA,OAAO,IAAIH,WAAW,CAAC;IACnBF,IAAI;IACJM,MAAM,EAAE;MACJC,KAAK,EAAE;QACHN,IAAI,EAAEH,SAAS,CAACU;MACpB;IACJ;EACJ,CAAC,CAAC;AACN;AACAhB,OAAO,CAACK,eAAe,GAAGA,eAAe;AACzC,SAASD,UAAU,CAACa,IAAI,EAAER,IAAI,EAAE;EAC5B,QAAQQ,IAAI,CAACC,IAAI;IACb,KAAKZ,SAAS,CAACa,IAAI,CAACC,SAAS;MACzB,OAAO,IAAId,SAAS,CAACe,WAAW,CAACjB,UAAU,CAACa,IAAI,CAACR,IAAI,EAAEA,IAAI,CAAC,CAAC;IACjE,KAAKH,SAAS,CAACa,IAAI,CAACG,aAAa;MAC7B,OAAO,IAAIhB,SAAS,CAACiB,cAAc,CAACnB,UAAU,CAACa,IAAI,CAACR,IAAI,EAAEA,IAAI,CAAC,CAAC;IACpE;MACI,IAAIA,IAAI,KAAK,QAAQ,EAAE;QACnB,OAAOJ,eAAe,CAACY,IAAI,CAACT,IAAI,CAACP,KAAK,EAAE,QAAQ,CAAC;MACrD;MACA,OAAOI,eAAe,CAACY,IAAI,CAACT,IAAI,CAACP,KAAK,EAAE,OAAO,CAAC;EAAC;AAE7D;AACAD,OAAO,CAACI,UAAU,GAAGA,UAAU;AAC/B,SAASD,WAAW,CAACM,IAAI,EAAE;EACvB,IAAI,WAAW,IAAIA,IAAI,EAAE;IACrB,MAAMK,MAAM,GAAGL,IAAI,CAACe,SAAS,EAAE;IAC/B;IACA,KAAK,MAAMC,SAAS,IAAIX,MAAM,EAAE;MAC5B,MAAMY,KAAK,GAAGZ,MAAM,CAACW,SAAS,CAAC;MAC/B,OAAOC,KAAK,CAAClB,IAAI,KAAK,OAAO;IACjC;EACJ;EACA,OAAO,KAAK;AAChB;AACAR,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,SAASD,iBAAiB,CAACO,IAAI,EAAE;EAC7B,QAAQA,IAAI,CAACD,IAAI;IACb,KAAKF,SAAS,CAACqB,UAAU,CAACnB,IAAI;MAC1B,OAAOF,SAAS,CAACqB,UAAU;IAC/B,KAAKrB,SAAS,CAACsB,YAAY,CAACpB,IAAI;MAC5B,OAAOF,SAAS,CAACsB,YAAY;IACjC,KAAKtB,SAAS,CAACU,aAAa,CAACR,IAAI;MAC7B,OAAOF,SAAS,CAACU,aAAa;IAClC,KAAKV,SAAS,CAACuB,cAAc,CAACrB,IAAI;MAC9B,OAAOF,SAAS,CAACuB,cAAc;IACnC,KAAKvB,SAAS,CAACwB,SAAS,CAACtB,IAAI;MACzB,OAAOF,SAAS,CAACwB,SAAS;IAC9B;MACI,OAAOrB,IAAI;EAAC;AAExB;AACAT,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}