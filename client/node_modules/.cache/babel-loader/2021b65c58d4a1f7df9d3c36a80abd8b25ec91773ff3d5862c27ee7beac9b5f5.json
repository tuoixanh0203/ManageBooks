{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Web\\\\GRAPHQL\\\\client\\\\src\\\\components\\\\BookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { getAuthors, getBooks } from \"../graphql-client/queries\";\nimport { addSingleBook } from \"../graphql-client/mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookForm = () => {\n  _s();\n  const [newBook, setNewBook] = useState({\n    name: '',\n    genre: '',\n    authorId: ''\n  });\n  const {\n    name,\n    genre,\n    authorId\n  } = newBook;\n  const onInputChange = event => {\n    setNewBook({\n      ...newBook,\n      [event.target.name]: event.target.value\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    addBook({\n      variables: {\n        name,\n        genre,\n        authorId\n      },\n      refetchQueries: [{\n        query: getBooks\n      }]\n    });\n    setNewBook({\n      name: '',\n      genre: '',\n      authorId: ''\n    });\n  };\n\n  // GraphQL operations\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthors);\n  const [addBook, dataMutation] = useMutation(addSingleBook);\n  console.log(dataMutation);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Book name\",\n        name: \"name\",\n        onChange: onInputChange,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Book genre\",\n        name: \"genre\",\n        onChange: onInputChange,\n        value: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading authors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"authorId\",\n        onChange: onInputChange,\n        value: authorId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: author.id,\n          children: author.name\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"float-right\",\n      variant: \"info\",\n      type: \"submit\",\n      children: \"Add book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(BookForm, \"I1NM8VmtgwlHkm/pACmywvzs7do=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = BookForm;\nexport default BookForm;\nvar _c;\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"names":["React","useState","Form","Button","useQuery","useMutation","getAuthors","getBooks","addSingleBook","BookForm","newBook","setNewBook","name","genre","authorId","onInputChange","event","target","value","onSubmit","preventDefault","addBook","variables","refetchQueries","query","loading","error","data","dataMutation","console","log","authors","map","author","id"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/client/src/components/BookForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { getAuthors, getBooks } from \"../graphql-client/queries\";\r\nimport { addSingleBook } from \"../graphql-client/mutations\";\r\n\r\nconst BookForm = () => {\r\n    const [newBook, setNewBook] = useState({\r\n        name: '',\r\n        genre: '',\r\n        authorId: ''\r\n    })\r\n\r\n    const {name, genre, authorId} = newBook\r\n\r\n    const onInputChange = event => {\r\n        setNewBook({\r\n            ...newBook,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        addBook({\r\n            variables: {name,genre,authorId},\r\n            refetchQueries: [{query: getBooks}]\r\n        })\r\n\r\n        setNewBook({name: '', genre: '', authorId: ''})\r\n    }\r\n\r\n    // GraphQL operations\r\n    const {loading, error, data} = useQuery(getAuthors)\r\n    \r\n    const [addBook, dataMutation] = useMutation(addSingleBook)\r\n\r\n    console.log(dataMutation)\r\n\r\n    return (\r\n        <Form  onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Control type=\"text\" placeholder=\"Book name\" name=\"name\" onChange={onInputChange} value={name} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Control type=\"text\" placeholder=\"Book genre\" name=\"genre\" onChange={onInputChange} value={genre} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    {loading ? (<p>Loading authors...</p>) : \r\n                    (<Form.Control as='select' name=\"authorId\" onChange={onInputChange} value={authorId}>\r\n                        <option value='' disabled>Select author</option>\r\n                        {data.authors.map(author => (\r\n                            <option key={author.id} value={author.id}>{author.name}</option>\r\n                        ))}\r\n                    </Form.Control>)}\r\n                    \r\n                </Form.Group>\r\n                <Button className=\"float-right\" variant=\"info\" type=\"submit\">Add book</Button>\r\n            </Form>\r\n    )\r\n}\r\n\r\nexport default BookForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAE3C,SAASC,QAAQ,EAAEC,WAAW,QAAQ,gBAAgB;AACtD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,2BAA2B;AAChE,SAASC,aAAa,QAAQ,6BAA6B;AAAC;AAE5D,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IACnCW,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM;IAACF,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGJ,OAAO;EAEvC,MAAMK,aAAa,GAAGC,KAAK,IAAI;IAC3BL,UAAU,CAAC;MACP,GAAGD,OAAO;MACV,CAACM,KAAK,CAACC,MAAM,CAACL,IAAI,GAAGI,KAAK,CAACC,MAAM,CAACC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,QAAQ,GAAGH,KAAK,IAAI;IACtBA,KAAK,CAACI,cAAc,EAAE;IAEtBC,OAAO,CAAC;MACJC,SAAS,EAAE;QAACV,IAAI;QAACC,KAAK;QAACC;MAAQ,CAAC;MAChCS,cAAc,EAAE,CAAC;QAACC,KAAK,EAAEjB;MAAQ,CAAC;IACtC,CAAC,CAAC;IAEFI,UAAU,CAAC;MAACC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAM;IAACW,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGvB,QAAQ,CAACE,UAAU,CAAC;EAEnD,MAAM,CAACe,OAAO,EAAEO,YAAY,CAAC,GAAGvB,WAAW,CAACG,aAAa,CAAC;EAE1DqB,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAEzB,oBACI,QAAC,IAAI;IAAE,QAAQ,EAAET,QAAS;IAAA,wBAClB,QAAC,IAAI,CAAC,KAAK;MAAA,uBACP,QAAC,IAAI,CAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,WAAW;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEJ,aAAc;QAAC,KAAK,EAAEH;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7F,eACb,QAAC,IAAI,CAAC,KAAK;MAAA,uBACP,QAAC,IAAI,CAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,YAAY;QAAC,IAAI,EAAC,OAAO;QAAC,QAAQ,EAAEG,aAAc;QAAC,KAAK,EAAEF;MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChG,eACb,QAAC,IAAI,CAAC,KAAK;MAAA,UACNY,OAAO,gBAAI;QAAA,UAAG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAI,gBACpC,QAAC,IAAI,CAAC,OAAO;QAAC,EAAE,EAAC,QAAQ;QAAC,IAAI,EAAC,UAAU;QAAC,QAAQ,EAAEV,aAAc;QAAC,KAAK,EAAED,QAAS;QAAA,wBAChF;UAAQ,KAAK,EAAC,EAAE;UAAC,QAAQ;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS,EAC/Ca,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,MAAM,iBACpB;UAAwB,KAAK,EAAEA,MAAM,CAACC,EAAG;UAAA,UAAED,MAAM,CAACrB;QAAI,GAAzCqB,MAAM,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QACzB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IACU;MAAA;MAAA;MAAA;IAAA,QAEP,eACb,QAAC,MAAM;MAAC,SAAS,EAAC,aAAa;MAAC,OAAO,EAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3E;AAEnB,CAAC;AAAA,GAvDKzB,QAAQ;EAAA,QA4BqBL,QAAQ,EAEPC,WAAW;AAAA;AAAA,KA9BzCI,QAAQ;AAyDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}