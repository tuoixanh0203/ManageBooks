{"ast":null,"code":"\"use strict\";\n\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n  Reader.call(this, buffer);\n\n  /**\n   * Read buffer.\n   * @name BufferReader#buf\n   * @type {Buffer}\n   */\n}\n\n/* istanbul ignore else */\nif (util.Buffer) BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n  var len = this.uint32(); // modifies pos\n  return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */","map":{"version":3,"names":["module","exports","BufferReader","Reader","require","prototype","Object","create","constructor","util","buffer","call","Buffer","_slice","slice","string","read_string_buffer","len","uint32","buf","utf8Slice","pos","Math","min"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/apollo-reporting-protobuf/node_modules/@apollo/protobufjs/src/reader_buffer.js"],"sourcesContent":["\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,OAAO,GAAGC,YAAY;;AAE7B;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,CAACF,YAAY,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACJ,MAAM,CAACE,SAAS,CAAC,EAAEG,WAAW,GAAGN,YAAY;AAErF,IAAIO,IAAI,GAAGL,OAAO,CAAC,gBAAgB,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,YAAY,CAACQ,MAAM,EAAE;EAC1BP,MAAM,CAACQ,IAAI,CAAC,IAAI,EAAED,MAAM,CAAC;;EAEzB;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAID,IAAI,CAACG,MAAM,EACXV,YAAY,CAACG,SAAS,CAACQ,MAAM,GAAGJ,IAAI,CAACG,MAAM,CAACP,SAAS,CAACS,KAAK;;AAE/D;AACA;AACA;AACAZ,YAAY,CAACG,SAAS,CAACU,MAAM,GAAG,SAASC,kBAAkB,GAAG;EAC1D,IAAIC,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;EACzB,OAAO,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,IAAI,CAACC,GAAG,EAAE,IAAI,CAACA,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACF,GAAG,GAAGJ,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC,CAAC;AACtF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}