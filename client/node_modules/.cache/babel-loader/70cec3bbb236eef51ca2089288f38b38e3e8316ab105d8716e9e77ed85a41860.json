{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccumulatorMap = void 0;\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n  get [Symbol.toStringTag]() {\n    return 'AccumulatorMap';\n  }\n  add(key, item) {\n    const group = this.get(key);\n    if (group === undefined) {\n      this.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n}\nexports.AccumulatorMap = AccumulatorMap;","map":{"version":3,"names":["Object","defineProperty","exports","value","AccumulatorMap","Map","Symbol","toStringTag","add","key","item","group","get","undefined","set","push"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/utils/cjs/AccumulatorMap.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccumulatorMap = void 0;\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\nexports.AccumulatorMap = AccumulatorMap;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B;AACA;AACA;AACA,MAAMA,cAAc,SAASC,GAAG,CAAC;EAC7B,KAAKC,MAAM,CAACC,WAAW,IAAI;IACvB,OAAO,gBAAgB;EAC3B;EACAC,GAAG,CAACC,GAAG,EAAEC,IAAI,EAAE;IACX,MAAMC,KAAK,GAAG,IAAI,CAACC,GAAG,CAACH,GAAG,CAAC;IAC3B,IAAIE,KAAK,KAAKE,SAAS,EAAE;MACrB,IAAI,CAACC,GAAG,CAACL,GAAG,EAAE,CAACC,IAAI,CAAC,CAAC;IACzB,CAAC,MACI;MACDC,KAAK,CAACI,IAAI,CAACL,IAAI,CAAC;IACpB;EACJ;AACJ;AACAR,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}