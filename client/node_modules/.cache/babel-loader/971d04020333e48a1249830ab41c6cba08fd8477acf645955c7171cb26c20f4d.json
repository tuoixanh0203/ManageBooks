{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usageReportingSignature = void 0;\nconst utils_dropunuseddefinitions_1 = require(\"@apollo/utils.dropunuseddefinitions\");\nconst utils_stripsensitiveliterals_1 = require(\"@apollo/utils.stripsensitiveliterals\");\nconst utils_printwithreducedwhitespace_1 = require(\"@apollo/utils.printwithreducedwhitespace\");\nconst utils_removealiases_1 = require(\"@apollo/utils.removealiases\");\nconst utils_sortast_1 = require(\"@apollo/utils.sortast\");\nfunction usageReportingSignature(ast, operationName) {\n  return (0, utils_printwithreducedwhitespace_1.printWithReducedWhitespace)((0, utils_sortast_1.sortAST)((0, utils_removealiases_1.removeAliases)((0, utils_stripsensitiveliterals_1.stripSensitiveLiterals)((0, utils_dropunuseddefinitions_1.dropUnusedDefinitions)(ast, operationName), {\n    hideListAndObjectLiterals: true\n  }))));\n}\nexports.usageReportingSignature = usageReportingSignature;","map":{"version":3,"mappings":";;;;;;AAqBA;AACA;AACA;AACA;AACA;AAGA,SAAgBA,uBAAuB,CACrCC,GAAiB,EACjBC,aAAqB;EAErB,OAAO,iEAA0B,EAC/B,2BAAO,EACL,uCAAa,EACX,yDAAsB,EAAC,uDAAqB,EAACD,GAAG,EAAEC,aAAa,CAAC,EAAE;IAChEC,yBAAyB,EAAE;GAC5B,CAAC,CACH,CACF,CACF;AACH;AAbAC","names":["usageReportingSignature","ast","operationName","hideListAndObjectLiterals","exports"],"sources":["C:\\Users\\Admin\\Documents\\Web\\GRAPHQL\\node_modules\\@apollo\\utils.usagereporting\\src\\signature.ts"],"sourcesContent":["// In Apollo Studio, we want to group requests making the same query together,\n// and treat different queries distinctly. But what does it mean for two queries\n// to be \"the same\"?  And what if you don't want to send the full text of the\n// query to Apollo's servers, either because it contains sensitive data or\n// because it contains extraneous operations or fragments?\n//\n// To solve these problems, Apollo Studio and related components have the\n// concept of \"signatures\". We don't (by default) send the full query string of\n// queries to Apollo's servers. Instead, each trace has its query string's\n// \"signature\".\n//\n// This module combines several AST transformations to create its signature:\n//\n// - dropUnusedDefinitions, which removes operations and fragments that aren't\n//   going to be used in execution\n// - stripSensitiveLiterals, which replaces all numeric and string literals as\n//   well as list and object input values with \"empty\" values\n// - removeAliases, which removes field aliasing from the query\n// - sortAST, which sorts the children of most multi-child nodes consistently\n// - printWithReducedWhitespace, a variant on graphql-js's 'print' which gets\n//   rid of unneeded whitespace\nimport { dropUnusedDefinitions } from \"@apollo/utils.dropunuseddefinitions\";\nimport { stripSensitiveLiterals } from \"@apollo/utils.stripsensitiveliterals\";\nimport { printWithReducedWhitespace } from \"@apollo/utils.printwithreducedwhitespace\";\nimport { removeAliases } from \"@apollo/utils.removealiases\";\nimport { sortAST } from \"@apollo/utils.sortast\";\nimport type { DocumentNode } from \"graphql\";\n\nexport function usageReportingSignature(\n  ast: DocumentNode,\n  operationName: string,\n): string {\n  return printWithReducedWhitespace(\n    sortAST(\n      removeAliases(\n        stripSensitiveLiterals(dropUnusedDefinitions(ast, operationName), {\n          hideListAndObjectLiterals: true,\n        }),\n      ),\n    ),\n  );\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}