{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeInterface = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst index_js_1 = require(\"./index.js\");\nfunction mergeInterface(node, existingNode, config) {\n  if (existingNode) {\n    try {\n      return {\n        name: node.name,\n        description: node['description'] || existingNode['description'],\n        kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || node.kind === 'InterfaceTypeDefinition' || existingNode.kind === 'InterfaceTypeDefinition' ? 'InterfaceTypeDefinition' : 'InterfaceTypeExtension',\n        loc: node.loc,\n        fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n        directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n        interfaces: node['interfaces'] ? (0, index_js_1.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config) : undefined\n      };\n    } catch (e) {\n      throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n    }\n  }\n  return (config === null || config === void 0 ? void 0 : config.convertExtensions) ? {\n    ...node,\n    kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION\n  } : node;\n}\nexports.mergeInterface = mergeInterface;","map":{"version":3,"names":["Object","defineProperty","exports","value","mergeInterface","graphql_1","require","fields_js_1","directives_js_1","index_js_1","node","existingNode","config","name","description","kind","convertExtensions","loc","fields","mergeFields","directives","mergeDirectives","interfaces","mergeNamedTypeArray","undefined","e","Error","message","Kind","INTERFACE_TYPE_DEFINITION"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/interface.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInterface = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst index_js_1 = require(\"./index.js\");\nfunction mergeInterface(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: node['interfaces']\n                    ? (0, index_js_1.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInterface = mergeInterface;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAME,eAAe,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAMG,UAAU,GAAGH,OAAO,CAAC,YAAY,CAAC;AACxC,SAASF,cAAc,CAACM,IAAI,EAAEC,YAAY,EAAEC,MAAM,EAAE;EAChD,IAAID,YAAY,EAAE;IACd,IAAI;MACA,OAAO;QACHE,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,WAAW,EAAEJ,IAAI,CAAC,aAAa,CAAC,IAAIC,YAAY,CAAC,aAAa,CAAC;QAC/DI,IAAI,EAAE,CAACH,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,iBAAiB,KAC3EN,IAAI,CAACK,IAAI,KAAK,yBAAyB,IACvCJ,YAAY,CAACI,IAAI,KAAK,yBAAyB,GAC7C,yBAAyB,GACzB,wBAAwB;QAC9BE,GAAG,EAAEP,IAAI,CAACO,GAAG;QACbC,MAAM,EAAE,CAAC,CAAC,EAAEX,WAAW,CAACY,WAAW,EAAET,IAAI,EAAEA,IAAI,CAACQ,MAAM,EAAEP,YAAY,CAACO,MAAM,EAAEN,MAAM,CAAC;QACpFQ,UAAU,EAAE,CAAC,CAAC,EAAEZ,eAAe,CAACa,eAAe,EAAEX,IAAI,CAACU,UAAU,EAAET,YAAY,CAACS,UAAU,EAAER,MAAM,CAAC;QAClGU,UAAU,EAAEZ,IAAI,CAAC,YAAY,CAAC,GACxB,CAAC,CAAC,EAAED,UAAU,CAACc,mBAAmB,EAAEb,IAAI,CAAC,YAAY,CAAC,EAAEC,YAAY,CAAC,YAAY,CAAC,EAAEC,MAAM,CAAC,GAC3FY;MACV,CAAC;IACL,CAAC,CACD,OAAOC,CAAC,EAAE;MACN,MAAM,IAAIC,KAAK,CAAE,sCAAqChB,IAAI,CAACG,IAAI,CAACV,KAAM,MAAKsB,CAAC,CAACE,OAAQ,EAAC,CAAC;IAC3F;EACJ;EACA,OAAO,CAACf,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,iBAAiB,IAC1E;IACE,GAAGN,IAAI;IACPK,IAAI,EAAEV,SAAS,CAACuB,IAAI,CAACC;EACzB,CAAC,GACCnB,IAAI;AACd;AACAR,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}