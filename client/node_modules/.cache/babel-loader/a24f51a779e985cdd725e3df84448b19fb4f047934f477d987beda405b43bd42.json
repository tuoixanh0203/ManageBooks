{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getArgumentsWithDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isTypeWithFields(t) {\n  return t.kind === graphql_1.Kind.OBJECT_TYPE_DEFINITION || t.kind === graphql_1.Kind.OBJECT_TYPE_EXTENSION;\n}\nfunction getArgumentsWithDirectives(documentNode) {\n  var _a;\n  const result = {};\n  const allTypes = documentNode.definitions.filter(isTypeWithFields);\n  for (const type of allTypes) {\n    if (type.fields == null) {\n      continue;\n    }\n    for (const field of type.fields) {\n      const argsWithDirectives = (_a = field.arguments) === null || _a === void 0 ? void 0 : _a.filter(arg => {\n        var _a;\n        return (_a = arg.directives) === null || _a === void 0 ? void 0 : _a.length;\n      });\n      if (!(argsWithDirectives === null || argsWithDirectives === void 0 ? void 0 : argsWithDirectives.length)) {\n        continue;\n      }\n      const typeFieldResult = result[`${type.name.value}.${field.name.value}`] = {};\n      for (const arg of argsWithDirectives) {\n        const directives = arg.directives.map(d => ({\n          name: d.name.value,\n          args: (d.arguments || []).reduce((prev, dArg) => ({\n            ...prev,\n            [dArg.name.value]: (0, graphql_1.valueFromASTUntyped)(dArg.value)\n          }), {})\n        }));\n        typeFieldResult[arg.name.value] = directives;\n      }\n    }\n  }\n  return result;\n}\nexports.getArgumentsWithDirectives = getArgumentsWithDirectives;","map":{"version":3,"names":["Object","defineProperty","exports","value","getArgumentsWithDirectives","graphql_1","require","isTypeWithFields","t","kind","Kind","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","documentNode","_a","result","allTypes","definitions","filter","type","fields","field","argsWithDirectives","arguments","arg","directives","length","typeFieldResult","name","map","d","args","reduce","prev","dArg","valueFromASTUntyped"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/utils/cjs/get-arguments-with-directives.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArgumentsWithDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isTypeWithFields(t) {\n    return t.kind === graphql_1.Kind.OBJECT_TYPE_DEFINITION || t.kind === graphql_1.Kind.OBJECT_TYPE_EXTENSION;\n}\nfunction getArgumentsWithDirectives(documentNode) {\n    var _a;\n    const result = {};\n    const allTypes = documentNode.definitions.filter(isTypeWithFields);\n    for (const type of allTypes) {\n        if (type.fields == null) {\n            continue;\n        }\n        for (const field of type.fields) {\n            const argsWithDirectives = (_a = field.arguments) === null || _a === void 0 ? void 0 : _a.filter(arg => { var _a; return (_a = arg.directives) === null || _a === void 0 ? void 0 : _a.length; });\n            if (!(argsWithDirectives === null || argsWithDirectives === void 0 ? void 0 : argsWithDirectives.length)) {\n                continue;\n            }\n            const typeFieldResult = (result[`${type.name.value}.${field.name.value}`] = {});\n            for (const arg of argsWithDirectives) {\n                const directives = arg.directives.map(d => ({\n                    name: d.name.value,\n                    args: (d.arguments || []).reduce((prev, dArg) => ({ ...prev, [dArg.name.value]: (0, graphql_1.valueFromASTUntyped)(dArg.value) }), {}),\n                }));\n                typeFieldResult[arg.name.value] = directives;\n            }\n        }\n    }\n    return result;\n}\nexports.getArgumentsWithDirectives = getArgumentsWithDirectives;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,0BAA0B,GAAG,KAAK,CAAC;AAC3C,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,SAASC,gBAAgB,CAACC,CAAC,EAAE;EACzB,OAAOA,CAAC,CAACC,IAAI,KAAKJ,SAAS,CAACK,IAAI,CAACC,sBAAsB,IAAIH,CAAC,CAACC,IAAI,KAAKJ,SAAS,CAACK,IAAI,CAACE,qBAAqB;AAC9G;AACA,SAASR,0BAA0B,CAACS,YAAY,EAAE;EAC9C,IAAIC,EAAE;EACN,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,QAAQ,GAAGH,YAAY,CAACI,WAAW,CAACC,MAAM,CAACX,gBAAgB,CAAC;EAClE,KAAK,MAAMY,IAAI,IAAIH,QAAQ,EAAE;IACzB,IAAIG,IAAI,CAACC,MAAM,IAAI,IAAI,EAAE;MACrB;IACJ;IACA,KAAK,MAAMC,KAAK,IAAIF,IAAI,CAACC,MAAM,EAAE;MAC7B,MAAME,kBAAkB,GAAG,CAACR,EAAE,GAAGO,KAAK,CAACE,SAAS,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,MAAM,CAACM,GAAG,IAAI;QAAE,IAAIV,EAAE;QAAE,OAAO,CAACA,EAAE,GAAGU,GAAG,CAACC,UAAU,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,MAAM;MAAE,CAAC,CAAC;MACjM,IAAI,EAAEJ,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACI,MAAM,CAAC,EAAE;QACtG;MACJ;MACA,MAAMC,eAAe,GAAIZ,MAAM,CAAE,GAAEI,IAAI,CAACS,IAAI,CAACzB,KAAM,IAAGkB,KAAK,CAACO,IAAI,CAACzB,KAAM,EAAC,CAAC,GAAG,CAAC,CAAE;MAC/E,KAAK,MAAMqB,GAAG,IAAIF,kBAAkB,EAAE;QAClC,MAAMG,UAAU,GAAGD,GAAG,CAACC,UAAU,CAACI,GAAG,CAACC,CAAC,KAAK;UACxCF,IAAI,EAAEE,CAAC,CAACF,IAAI,CAACzB,KAAK;UAClB4B,IAAI,EAAE,CAACD,CAAC,CAACP,SAAS,IAAI,EAAE,EAAES,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,MAAM;YAAE,GAAGD,IAAI;YAAE,CAACC,IAAI,CAACN,IAAI,CAACzB,KAAK,GAAG,CAAC,CAAC,EAAEE,SAAS,CAAC8B,mBAAmB,EAAED,IAAI,CAAC/B,KAAK;UAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACzI,CAAC,CAAC,CAAC;QACHwB,eAAe,CAACH,GAAG,CAACI,IAAI,CAACzB,KAAK,CAAC,GAAGsB,UAAU;MAChD;IACJ;EACJ;EACA,OAAOV,MAAM;AACjB;AACAb,OAAO,CAACE,0BAA0B,GAAGA,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}