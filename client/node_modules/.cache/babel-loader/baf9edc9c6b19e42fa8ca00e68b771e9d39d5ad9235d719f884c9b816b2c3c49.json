{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.relayStylePaginationMock = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n/**\n * Produces a resolver that'll mock a [Relay-style cursor pagination](https://relay.dev/graphql/connections.htm).\n *\n * ```ts\n * const schemaWithMocks = addMocksToSchema({\n *   schema,\n *   resolvers: (store) => ({\n *     User: {\n *       friends: relayStylePaginationMock(store),\n *     }\n *   }),\n * })\n * ```\n * @param store the MockStore\n */\nconst relayStylePaginationMock = function (store) {\n  let {\n    cursorFn = node => `${node.$ref.key}`,\n    applyOnNodes,\n    allNodesFn\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return (parent, args, context, info) => {\n    const source = (0, utils_js_1.isRootType)(info.parentType, info.schema) ? (0, utils_js_1.makeRef)(info.parentType.name, 'ROOT') : parent;\n    const allNodesFn_ = allNodesFn !== null && allNodesFn !== void 0 ? allNodesFn : defaultAllNodesFn(store);\n    let allNodes = allNodesFn_(source, args, context, info);\n    if (applyOnNodes) {\n      allNodes = applyOnNodes(allNodes, args);\n    }\n    const allEdges = allNodes.map(node => ({\n      node,\n      cursor: cursorFn(node)\n    }));\n    let start, end;\n    const {\n      first,\n      after,\n      last,\n      before\n    } = args;\n    if (typeof first === 'number') {\n      // forward pagination\n      if (last || before) {\n        throw new Error(\"if `first` is provided, `last` or `before` can't be provided\");\n      }\n      const afterIndex = after ? allEdges.findIndex(e => e.cursor === after) : -1;\n      start = afterIndex + 1;\n      end = afterIndex + 1 + first;\n    } else if (typeof last === 'number') {\n      // backward pagination\n      if (first || after) {\n        throw new Error(\"if `last` is provided, `first` or `after` can't be provided\");\n      }\n      const foundBeforeIndex = before ? allEdges.findIndex(e => e.cursor === before) : -1;\n      const beforeIndex = foundBeforeIndex !== -1 ? foundBeforeIndex : allNodes.length;\n      start = allEdges.length - (allEdges.length - beforeIndex) - last;\n      // negative index on Array.slice indicate offset from end of sequence => we don't want\n      if (start < 0) start = 0;\n      end = beforeIndex;\n    } else {\n      throw new Error('A `first` or a `last` arguments should be provided');\n    }\n    const edges = allEdges.slice(start, end);\n    const pageInfo = {\n      startCursor: edges.length > 0 ? edges[0].cursor : '',\n      endCursor: edges.length > 0 ? edges[edges.length - 1].cursor : '',\n      hasNextPage: end < allEdges.length - 1,\n      hasPreviousPage: start > 0\n    };\n    return {\n      edges,\n      pageInfo,\n      totalCount: allEdges.length\n    };\n  };\n};\nexports.relayStylePaginationMock = relayStylePaginationMock;\nconst defaultAllNodesFn = store => (parent, _, __, info) => store.get(parent, [info.fieldName, 'edges']).map(e => store.get(e, 'node'));","map":{"version":3,"names":["Object","defineProperty","exports","value","relayStylePaginationMock","utils_js_1","require","store","cursorFn","node","$ref","key","applyOnNodes","allNodesFn","parent","args","context","info","source","isRootType","parentType","schema","makeRef","name","allNodesFn_","defaultAllNodesFn","allNodes","allEdges","map","cursor","start","end","first","after","last","before","Error","afterIndex","findIndex","e","foundBeforeIndex","beforeIndex","length","edges","slice","pageInfo","startCursor","endCursor","hasNextPage","hasPreviousPage","totalCount","_","__","get","fieldName"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/mock/cjs/pagination.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.relayStylePaginationMock = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n/**\n * Produces a resolver that'll mock a [Relay-style cursor pagination](https://relay.dev/graphql/connections.htm).\n *\n * ```ts\n * const schemaWithMocks = addMocksToSchema({\n *   schema,\n *   resolvers: (store) => ({\n *     User: {\n *       friends: relayStylePaginationMock(store),\n *     }\n *   }),\n * })\n * ```\n * @param store the MockStore\n */\nconst relayStylePaginationMock = (store, { cursorFn = node => `${node.$ref.key}`, applyOnNodes, allNodesFn, } = {}) => {\n    return (parent, args, context, info) => {\n        const source = (0, utils_js_1.isRootType)(info.parentType, info.schema) ? (0, utils_js_1.makeRef)(info.parentType.name, 'ROOT') : parent;\n        const allNodesFn_ = allNodesFn !== null && allNodesFn !== void 0 ? allNodesFn : defaultAllNodesFn(store);\n        let allNodes = allNodesFn_(source, args, context, info);\n        if (applyOnNodes) {\n            allNodes = applyOnNodes(allNodes, args);\n        }\n        const allEdges = allNodes.map(node => ({\n            node,\n            cursor: cursorFn(node),\n        }));\n        let start, end;\n        const { first, after, last, before } = args;\n        if (typeof first === 'number') {\n            // forward pagination\n            if (last || before) {\n                throw new Error(\"if `first` is provided, `last` or `before` can't be provided\");\n            }\n            const afterIndex = after ? allEdges.findIndex(e => e.cursor === after) : -1;\n            start = afterIndex + 1;\n            end = afterIndex + 1 + first;\n        }\n        else if (typeof last === 'number') {\n            // backward pagination\n            if (first || after) {\n                throw new Error(\"if `last` is provided, `first` or `after` can't be provided\");\n            }\n            const foundBeforeIndex = before ? allEdges.findIndex(e => e.cursor === before) : -1;\n            const beforeIndex = foundBeforeIndex !== -1 ? foundBeforeIndex : allNodes.length;\n            start = allEdges.length - (allEdges.length - beforeIndex) - last;\n            // negative index on Array.slice indicate offset from end of sequence => we don't want\n            if (start < 0)\n                start = 0;\n            end = beforeIndex;\n        }\n        else {\n            throw new Error('A `first` or a `last` arguments should be provided');\n        }\n        const edges = allEdges.slice(start, end);\n        const pageInfo = {\n            startCursor: edges.length > 0 ? edges[0].cursor : '',\n            endCursor: edges.length > 0 ? edges[edges.length - 1].cursor : '',\n            hasNextPage: end < allEdges.length - 1,\n            hasPreviousPage: start > 0,\n        };\n        return {\n            edges,\n            pageInfo,\n            totalCount: allEdges.length,\n        };\n    };\n};\nexports.relayStylePaginationMock = relayStylePaginationMock;\nconst defaultAllNodesFn = (store) => (parent, _, __, info) => store.get(parent, [info.fieldName, 'edges']).map(e => store.get(e, 'node'));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}