{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseGraphQLJSON = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction stripBOM(content) {\n  content = content.toString();\n  // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n  // because the buffer-to-string conversion in `fs.readFileSync()`\n  // translates it to FEFF, the UTF-16 BOM.\n  if (content.charCodeAt(0) === 0xfeff) {\n    content = content.slice(1);\n  }\n  return content;\n}\nfunction parseBOM(content) {\n  return JSON.parse(stripBOM(content));\n}\nfunction parseGraphQLJSON(location, jsonContent, options) {\n  let parsedJson = parseBOM(jsonContent);\n  if (parsedJson.data) {\n    parsedJson = parsedJson.data;\n  }\n  if (parsedJson.kind === 'Document') {\n    return {\n      location,\n      document: parsedJson\n    };\n  } else if (parsedJson.__schema) {\n    const schema = (0, graphql_1.buildClientSchema)(parsedJson, options);\n    return {\n      location,\n      schema\n    };\n  } else if (typeof parsedJson === 'string') {\n    return {\n      location,\n      rawSDL: parsedJson\n    };\n  }\n  throw new Error(`Not valid JSON content`);\n}\nexports.parseGraphQLJSON = parseGraphQLJSON;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseGraphQLJSON","graphql_1","require","stripBOM","content","toString","charCodeAt","slice","parseBOM","JSON","parse","location","jsonContent","options","parsedJson","data","kind","document","__schema","schema","buildClientSchema","rawSDL","Error"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/cjs/parse-graphql-json.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGraphQLJSON = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction stripBOM(content) {\n    content = content.toString();\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xfeff) {\n        content = content.slice(1);\n    }\n    return content;\n}\nfunction parseBOM(content) {\n    return JSON.parse(stripBOM(content));\n}\nfunction parseGraphQLJSON(location, jsonContent, options) {\n    let parsedJson = parseBOM(jsonContent);\n    if (parsedJson.data) {\n        parsedJson = parsedJson.data;\n    }\n    if (parsedJson.kind === 'Document') {\n        return {\n            location,\n            document: parsedJson,\n        };\n    }\n    else if (parsedJson.__schema) {\n        const schema = (0, graphql_1.buildClientSchema)(parsedJson, options);\n        return {\n            location,\n            schema,\n        };\n    }\n    else if (typeof parsedJson === 'string') {\n        return {\n            location,\n            rawSDL: parsedJson,\n        };\n    }\n    throw new Error(`Not valid JSON content`);\n}\nexports.parseGraphQLJSON = parseGraphQLJSON;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,SAASC,QAAQ,CAACC,OAAO,EAAE;EACvBA,OAAO,GAAGA,OAAO,CAACC,QAAQ,EAAE;EAC5B;EACA;EACA;EACA,IAAID,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;IAClCF,OAAO,GAAGA,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;EAC9B;EACA,OAAOH,OAAO;AAClB;AACA,SAASI,QAAQ,CAACJ,OAAO,EAAE;EACvB,OAAOK,IAAI,CAACC,KAAK,CAACP,QAAQ,CAACC,OAAO,CAAC,CAAC;AACxC;AACA,SAASJ,gBAAgB,CAACW,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACtD,IAAIC,UAAU,GAAGN,QAAQ,CAACI,WAAW,CAAC;EACtC,IAAIE,UAAU,CAACC,IAAI,EAAE;IACjBD,UAAU,GAAGA,UAAU,CAACC,IAAI;EAChC;EACA,IAAID,UAAU,CAACE,IAAI,KAAK,UAAU,EAAE;IAChC,OAAO;MACHL,QAAQ;MACRM,QAAQ,EAAEH;IACd,CAAC;EACL,CAAC,MACI,IAAIA,UAAU,CAACI,QAAQ,EAAE;IAC1B,MAAMC,MAAM,GAAG,CAAC,CAAC,EAAElB,SAAS,CAACmB,iBAAiB,EAAEN,UAAU,EAAED,OAAO,CAAC;IACpE,OAAO;MACHF,QAAQ;MACRQ;IACJ,CAAC;EACL,CAAC,MACI,IAAI,OAAOL,UAAU,KAAK,QAAQ,EAAE;IACrC,OAAO;MACHH,QAAQ;MACRU,MAAM,EAAEP;IACZ,CAAC;EACL;EACA,MAAM,IAAIQ,KAAK,CAAE,wBAAuB,CAAC;AAC7C;AACAxB,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}