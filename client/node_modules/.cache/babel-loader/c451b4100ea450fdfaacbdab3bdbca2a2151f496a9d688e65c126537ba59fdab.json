{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkForResolveTypeResolver = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n  (0, utils_1.mapSchema)(schema, {\n    [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n      if (!type.resolveType) {\n        const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` + '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n        if (requireResolversForResolveType === 'error') {\n          throw new Error(message);\n        }\n        if (requireResolversForResolveType === 'warn') {\n          console.warn(message);\n        }\n      }\n      return undefined;\n    }\n  });\n}\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;","map":{"version":3,"names":["Object","defineProperty","exports","value","checkForResolveTypeResolver","utils_1","require","schema","requireResolversForResolveType","mapSchema","MapperKind","ABSTRACT_TYPE","type","resolveType","message","name","Error","console","warn","undefined"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/schema/cjs/checkForResolveTypeResolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkForResolveTypeResolver = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,2BAA2B,GAAG,KAAK,CAAC;AAC5C,MAAMC,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC/C;AACA,SAASF,2BAA2B,CAACG,MAAM,EAAEC,8BAA8B,EAAE;EACzE,CAAC,CAAC,EAAEH,OAAO,CAACI,SAAS,EAAEF,MAAM,EAAE;IAC3B,CAACF,OAAO,CAACK,UAAU,CAACC,aAAa,GAAGC,IAAI,IAAI;MACxC,IAAI,CAACA,IAAI,CAACC,WAAW,EAAE;QACnB,MAAMC,OAAO,GAAI,SAAQF,IAAI,CAACG,IAAK,8DAA6D,GAC5F,mFAAmF;QACvF,IAAIP,8BAA8B,KAAK,OAAO,EAAE;UAC5C,MAAM,IAAIQ,KAAK,CAACF,OAAO,CAAC;QAC5B;QACA,IAAIN,8BAA8B,KAAK,MAAM,EAAE;UAC3CS,OAAO,CAACC,IAAI,CAACJ,OAAO,CAAC;QACzB;MACJ;MACA,OAAOK,SAAS;IACpB;EACJ,CAAC,CAAC;AACN;AACAjB,OAAO,CAACE,2BAA2B,GAAGA,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}