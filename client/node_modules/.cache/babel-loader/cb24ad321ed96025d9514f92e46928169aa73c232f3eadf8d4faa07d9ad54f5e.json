{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultStringComparator = exports.CompareVal = exports.printTypeNode = exports.isNonNullTypeNode = exports.isListTypeNode = exports.isWrappingTypeNode = exports.extractType = exports.isSourceTypes = exports.isStringTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isStringTypes(types) {\n  return typeof types === 'string';\n}\nexports.isStringTypes = isStringTypes;\nfunction isSourceTypes(types) {\n  return types instanceof graphql_1.Source;\n}\nexports.isSourceTypes = isSourceTypes;\nfunction extractType(type) {\n  let visitedType = type;\n  while (visitedType.kind === graphql_1.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n    visitedType = visitedType.type;\n  }\n  return visitedType;\n}\nexports.extractType = extractType;\nfunction isWrappingTypeNode(type) {\n  return type.kind !== graphql_1.Kind.NAMED_TYPE;\n}\nexports.isWrappingTypeNode = isWrappingTypeNode;\nfunction isListTypeNode(type) {\n  return type.kind === graphql_1.Kind.LIST_TYPE;\n}\nexports.isListTypeNode = isListTypeNode;\nfunction isNonNullTypeNode(type) {\n  return type.kind === graphql_1.Kind.NON_NULL_TYPE;\n}\nexports.isNonNullTypeNode = isNonNullTypeNode;\nfunction printTypeNode(type) {\n  if (isListTypeNode(type)) {\n    return `[${printTypeNode(type.type)}]`;\n  }\n  if (isNonNullTypeNode(type)) {\n    return `${printTypeNode(type.type)}!`;\n  }\n  return type.name.value;\n}\nexports.printTypeNode = printTypeNode;\nvar CompareVal;\n(function (CompareVal) {\n  CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n  CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n  CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal = exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n  if (a == null && b == null) {\n    return CompareVal.A_EQUALS_B;\n  }\n  if (a == null) {\n    return CompareVal.A_SMALLER_THAN_B;\n  }\n  if (b == null) {\n    return CompareVal.A_GREATER_THAN_B;\n  }\n  if (a < b) return CompareVal.A_SMALLER_THAN_B;\n  if (a > b) return CompareVal.A_GREATER_THAN_B;\n  return CompareVal.A_EQUALS_B;\n}\nexports.defaultStringComparator = defaultStringComparator;","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultStringComparator","CompareVal","printTypeNode","isNonNullTypeNode","isListTypeNode","isWrappingTypeNode","extractType","isSourceTypes","isStringTypes","graphql_1","require","types","Source","type","visitedType","kind","Kind","LIST_TYPE","NAMED_TYPE","NON_NULL_TYPE","name","a","b","A_EQUALS_B","A_SMALLER_THAN_B","A_GREATER_THAN_B"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultStringComparator = exports.CompareVal = exports.printTypeNode = exports.isNonNullTypeNode = exports.isListTypeNode = exports.isWrappingTypeNode = exports.extractType = exports.isSourceTypes = exports.isStringTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nexports.isStringTypes = isStringTypes;\nfunction isSourceTypes(types) {\n    return types instanceof graphql_1.Source;\n}\nexports.isSourceTypes = isSourceTypes;\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql_1.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nexports.extractType = extractType;\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql_1.Kind.NAMED_TYPE;\n}\nexports.isWrappingTypeNode = isWrappingTypeNode;\nfunction isListTypeNode(type) {\n    return type.kind === graphql_1.Kind.LIST_TYPE;\n}\nexports.isListTypeNode = isListTypeNode;\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql_1.Kind.NON_NULL_TYPE;\n}\nexports.isNonNullTypeNode = isNonNullTypeNode;\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nexports.printTypeNode = printTypeNode;\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal = exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\nexports.defaultStringComparator = defaultStringComparator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}