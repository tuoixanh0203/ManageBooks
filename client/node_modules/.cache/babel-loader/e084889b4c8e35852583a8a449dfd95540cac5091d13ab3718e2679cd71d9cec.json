{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseInputValueLiteral = exports.parseInputValue = exports.serializeInputValue = exports.transformInputValue = void 0;\nconst graphql_1 = require(\"graphql\");\nconst helpers_js_1 = require(\"./helpers.js\");\nfunction transformInputValue(type, value) {\n  let inputLeafValueTransformer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let inputObjectValueTransformer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (value == null) {\n    return value;\n  }\n  const nullableType = (0, graphql_1.getNullableType)(type);\n  if ((0, graphql_1.isLeafType)(nullableType)) {\n    return inputLeafValueTransformer != null ? inputLeafValueTransformer(nullableType, value) : value;\n  } else if ((0, graphql_1.isListType)(nullableType)) {\n    return (0, helpers_js_1.asArray)(value).map(listMember => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n  } else if ((0, graphql_1.isInputObjectType)(nullableType)) {\n    const fields = nullableType.getFields();\n    const newValue = {};\n    for (const key in value) {\n      const field = fields[key];\n      if (field != null) {\n        newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n      }\n    }\n    return inputObjectValueTransformer != null ? inputObjectValueTransformer(nullableType, newValue) : newValue;\n  }\n  // unreachable, no other possible return value\n}\n\nexports.transformInputValue = transformInputValue;\nfunction serializeInputValue(type, value) {\n  return transformInputValue(type, value, (t, v) => {\n    try {\n      return t.serialize(v);\n    } catch (_a) {\n      return v;\n    }\n  });\n}\nexports.serializeInputValue = serializeInputValue;\nfunction parseInputValue(type, value) {\n  return transformInputValue(type, value, (t, v) => {\n    try {\n      return t.parseValue(v);\n    } catch (_a) {\n      return v;\n    }\n  });\n}\nexports.parseInputValue = parseInputValue;\nfunction parseInputValueLiteral(type, value) {\n  return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\nexports.parseInputValueLiteral = parseInputValueLiteral;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseInputValueLiteral","parseInputValue","serializeInputValue","transformInputValue","graphql_1","require","helpers_js_1","type","inputLeafValueTransformer","inputObjectValueTransformer","nullableType","getNullableType","isLeafType","isListType","asArray","map","listMember","ofType","isInputObjectType","fields","getFields","newValue","key","field","t","v","serialize","_a","parseValue","parseLiteral"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/utils/cjs/transformInputValue.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInputValueLiteral = exports.parseInputValue = exports.serializeInputValue = exports.transformInputValue = void 0;\nconst graphql_1 = require(\"graphql\");\nconst helpers_js_1 = require(\"./helpers.js\");\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0, graphql_1.getNullableType)(type);\n    if ((0, graphql_1.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null ? inputLeafValueTransformer(nullableType, value) : value;\n    }\n    else if ((0, graphql_1.isListType)(nullableType)) {\n        return (0, helpers_js_1.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0, graphql_1.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null ? inputObjectValueTransformer(nullableType, newValue) : newValue;\n    }\n    // unreachable, no other possible return value\n}\nexports.transformInputValue = transformInputValue;\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nexports.serializeInputValue = serializeInputValue;\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nexports.parseInputValue = parseInputValue;\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\nexports.parseInputValueLiteral = parseInputValueLiteral;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,sBAAsB,GAAGF,OAAO,CAACG,eAAe,GAAGH,OAAO,CAACI,mBAAmB,GAAGJ,OAAO,CAACK,mBAAmB,GAAG,KAAK,CAAC;AAC7H,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMC,YAAY,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC5C,SAASF,mBAAmB,CAACI,IAAI,EAAER,KAAK,EAAwE;EAAA,IAAtES,yBAAyB,uEAAG,IAAI;EAAA,IAAEC,2BAA2B,uEAAG,IAAI;EAC1G,IAAIV,KAAK,IAAI,IAAI,EAAE;IACf,OAAOA,KAAK;EAChB;EACA,MAAMW,YAAY,GAAG,CAAC,CAAC,EAAEN,SAAS,CAACO,eAAe,EAAEJ,IAAI,CAAC;EACzD,IAAI,CAAC,CAAC,EAAEH,SAAS,CAACQ,UAAU,EAAEF,YAAY,CAAC,EAAE;IACzC,OAAOF,yBAAyB,IAAI,IAAI,GAAGA,yBAAyB,CAACE,YAAY,EAAEX,KAAK,CAAC,GAAGA,KAAK;EACrG,CAAC,MACI,IAAI,CAAC,CAAC,EAAEK,SAAS,CAACS,UAAU,EAAEH,YAAY,CAAC,EAAE;IAC9C,OAAO,CAAC,CAAC,EAAEJ,YAAY,CAACQ,OAAO,EAAEf,KAAK,CAAC,CAACgB,GAAG,CAAEC,UAAU,IAAKb,mBAAmB,CAACO,YAAY,CAACO,MAAM,EAAED,UAAU,EAAER,yBAAyB,EAAEC,2BAA2B,CAAC,CAAC;EAC7K,CAAC,MACI,IAAI,CAAC,CAAC,EAAEL,SAAS,CAACc,iBAAiB,EAAER,YAAY,CAAC,EAAE;IACrD,MAAMS,MAAM,GAAGT,YAAY,CAACU,SAAS,EAAE;IACvC,MAAMC,QAAQ,GAAG,CAAC,CAAC;IACnB,KAAK,MAAMC,GAAG,IAAIvB,KAAK,EAAE;MACrB,MAAMwB,KAAK,GAAGJ,MAAM,CAACG,GAAG,CAAC;MACzB,IAAIC,KAAK,IAAI,IAAI,EAAE;QACfF,QAAQ,CAACC,GAAG,CAAC,GAAGnB,mBAAmB,CAACoB,KAAK,CAAChB,IAAI,EAAER,KAAK,CAACuB,GAAG,CAAC,EAAEd,yBAAyB,EAAEC,2BAA2B,CAAC;MACvH;IACJ;IACA,OAAOA,2BAA2B,IAAI,IAAI,GAAGA,2BAA2B,CAACC,YAAY,EAAEW,QAAQ,CAAC,GAAGA,QAAQ;EAC/G;EACA;AACJ;;AACAvB,OAAO,CAACK,mBAAmB,GAAGA,mBAAmB;AACjD,SAASD,mBAAmB,CAACK,IAAI,EAAER,KAAK,EAAE;EACtC,OAAOI,mBAAmB,CAACI,IAAI,EAAER,KAAK,EAAE,CAACyB,CAAC,EAAEC,CAAC,KAAK;IAC9C,IAAI;MACA,OAAOD,CAAC,CAACE,SAAS,CAACD,CAAC,CAAC;IACzB,CAAC,CACD,OAAOE,EAAE,EAAE;MACP,OAAOF,CAAC;IACZ;EACJ,CAAC,CAAC;AACN;AACA3B,OAAO,CAACI,mBAAmB,GAAGA,mBAAmB;AACjD,SAASD,eAAe,CAACM,IAAI,EAAER,KAAK,EAAE;EAClC,OAAOI,mBAAmB,CAACI,IAAI,EAAER,KAAK,EAAE,CAACyB,CAAC,EAAEC,CAAC,KAAK;IAC9C,IAAI;MACA,OAAOD,CAAC,CAACI,UAAU,CAACH,CAAC,CAAC;IAC1B,CAAC,CACD,OAAOE,EAAE,EAAE;MACP,OAAOF,CAAC;IACZ;EACJ,CAAC,CAAC;AACN;AACA3B,OAAO,CAACG,eAAe,GAAGA,eAAe;AACzC,SAASD,sBAAsB,CAACO,IAAI,EAAER,KAAK,EAAE;EACzC,OAAOI,mBAAmB,CAACI,IAAI,EAAER,KAAK,EAAE,CAACyB,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACK,YAAY,CAACJ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5E;AACA3B,OAAO,CAACE,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}