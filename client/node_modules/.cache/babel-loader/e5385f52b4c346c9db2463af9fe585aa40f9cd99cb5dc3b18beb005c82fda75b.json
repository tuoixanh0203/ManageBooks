{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEachDefaultValue = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction forEachDefaultValue(schema, fn) {\n  const typeMap = schema.getTypeMap();\n  for (const typeName in typeMap) {\n    const type = typeMap[typeName];\n    if (!(0, graphql_1.getNamedType)(type).name.startsWith('__')) {\n      if ((0, graphql_1.isObjectType)(type)) {\n        const fields = type.getFields();\n        for (const fieldName in fields) {\n          const field = fields[fieldName];\n          for (const arg of field.args) {\n            arg.defaultValue = fn(arg.type, arg.defaultValue);\n          }\n        }\n      } else if ((0, graphql_1.isInputObjectType)(type)) {\n        const fields = type.getFields();\n        for (const fieldName in fields) {\n          const field = fields[fieldName];\n          field.defaultValue = fn(field.type, field.defaultValue);\n        }\n      }\n    }\n  }\n}\nexports.forEachDefaultValue = forEachDefaultValue;","map":{"version":3,"names":["Object","defineProperty","exports","value","forEachDefaultValue","graphql_1","require","schema","fn","typeMap","getTypeMap","typeName","type","getNamedType","name","startsWith","isObjectType","fields","getFields","fieldName","field","arg","args","defaultValue","isInputObjectType"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/@graphql-tools/utils/cjs/forEachDefaultValue.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forEachDefaultValue = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!(0, graphql_1.getNamedType)(type).name.startsWith('__')) {\n            if ((0, graphql_1.isObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if ((0, graphql_1.isInputObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\nexports.forEachDefaultValue = forEachDefaultValue;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,SAASF,mBAAmB,CAACG,MAAM,EAAEC,EAAE,EAAE;EACrC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,EAAE;EACnC,KAAK,MAAMC,QAAQ,IAAIF,OAAO,EAAE;IAC5B,MAAMG,IAAI,GAAGH,OAAO,CAACE,QAAQ,CAAC;IAC9B,IAAI,CAAC,CAAC,CAAC,EAAEN,SAAS,CAACQ,YAAY,EAAED,IAAI,CAAC,CAACE,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;MAC1D,IAAI,CAAC,CAAC,EAAEV,SAAS,CAACW,YAAY,EAAEJ,IAAI,CAAC,EAAE;QACnC,MAAMK,MAAM,GAAGL,IAAI,CAACM,SAAS,EAAE;QAC/B,KAAK,MAAMC,SAAS,IAAIF,MAAM,EAAE;UAC5B,MAAMG,KAAK,GAAGH,MAAM,CAACE,SAAS,CAAC;UAC/B,KAAK,MAAME,GAAG,IAAID,KAAK,CAACE,IAAI,EAAE;YAC1BD,GAAG,CAACE,YAAY,GAAGf,EAAE,CAACa,GAAG,CAACT,IAAI,EAAES,GAAG,CAACE,YAAY,CAAC;UACrD;QACJ;MACJ,CAAC,MACI,IAAI,CAAC,CAAC,EAAElB,SAAS,CAACmB,iBAAiB,EAAEZ,IAAI,CAAC,EAAE;QAC7C,MAAMK,MAAM,GAAGL,IAAI,CAACM,SAAS,EAAE;QAC/B,KAAK,MAAMC,SAAS,IAAIF,MAAM,EAAE;UAC5B,MAAMG,KAAK,GAAGH,MAAM,CAACE,SAAS,CAAC;UAC/BC,KAAK,CAACG,YAAY,GAAGf,EAAE,CAACY,KAAK,CAACR,IAAI,EAAEQ,KAAK,CAACG,YAAY,CAAC;QAC3D;MACJ;IACJ;EACJ;AACJ;AACArB,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}