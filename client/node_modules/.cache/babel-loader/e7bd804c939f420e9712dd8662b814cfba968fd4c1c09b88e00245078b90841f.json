{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Web\\\\GRAPHQL\\\\client\\\\src\\\\components\\\\BookDetails.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport React, { Fragment } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { getSingleBook } from \"../graphql-client/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookDetails = _ref => {\n  _s();\n  let {\n    bookId\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getSingleBook, {\n    variables: {\n      id: bookId\n    },\n    skip: bookId === null\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading book details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);\n  if (error) {\n    console.log(error.message);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error loading book details!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  const book = bookId !== null ? data.book : null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bg: \"info\",\n    text: \"white\",\n    className: \"shadow\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: book === null ? /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"Select book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          children: book.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", book.author.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All books by this author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: book.author.books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: book.name\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 60\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"float-right\",\n          variant: \"info\",\n          children: \"Update book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(BookDetails, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n_c = BookDetails;\nexport default BookDetails;\nvar _c;\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["useQuery","React","Fragment","Card","Button","getSingleBook","BookDetails","bookId","loading","error","data","variables","id","skip","console","log","message","book","name","genre","author","age","books","map"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/client/src/components/BookDetails.js"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport React, {Fragment} from \"react\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { getSingleBook } from \"../graphql-client/queries\";\r\n\r\nconst BookDetails = ({bookId}) => {\r\n    const {loading, error, data} = useQuery(getSingleBook, {\r\n        variables: {\r\n            id: bookId\r\n        },\r\n        skip: bookId === null\r\n    })\r\n\r\n    if(loading) return <p>Loading book details...</p>\r\n    if(error){\r\n        console.log(error.message)\r\n        return <p>Error loading book details!</p>\r\n    } \r\n\r\n    const book = bookId !== null ? data.book : null\r\n\r\n    return (\r\n        <Card bg='info' text=\"white\" className=\"shadow\">\r\n            <Card.Body>\r\n                {\r\n                    book === null ? <Card.Text>Select book</Card.Text> :\r\n                    <Fragment>\r\n                        <Card.Title>{book.name}</Card.Title>\r\n                        <Card.Subtitle>{book.genre}</Card.Subtitle>\r\n                        <p>{book.author.name}</p>\r\n                        <p>Age: {book.author.age}</p>\r\n                        <p>All books by this author</p>\r\n                        <ul>\r\n                            {book.author.books.map(book => <li key={book.id}>{book.name}</li>)}\r\n                        </ul>\r\n                        <Button className=\"float-right\" variant=\"info\">Update book</Button>\r\n                    </Fragment>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default BookDetails"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,aAAa,QAAQ,2BAA2B;AAAC;AAE1D,MAAMC,WAAW,GAAG,QAAc;EAAA;EAAA,IAAb;IAACC;EAAM,CAAC;EACzB,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGV,QAAQ,CAACK,aAAa,EAAE;IACnDM,SAAS,EAAE;MACPC,EAAE,EAAEL;IACR,CAAC;IACDM,IAAI,EAAEN,MAAM,KAAK;EACrB,CAAC,CAAC;EAEF,IAAGC,OAAO,EAAE,oBAAO;IAAA,UAAG;EAAuB;IAAA;IAAA;IAAA;EAAA,QAAI;EACjD,IAAGC,KAAK,EAAC;IACLK,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,OAAO,CAAC;IAC1B,oBAAO;MAAA,UAAG;IAA2B;MAAA;MAAA;MAAA;IAAA,QAAI;EAC7C;EAEA,MAAMC,IAAI,GAAGV,MAAM,KAAK,IAAI,GAAGG,IAAI,CAACO,IAAI,GAAG,IAAI;EAE/C,oBACI,QAAC,IAAI;IAAC,EAAE,EAAC,MAAM;IAAC,IAAI,EAAC,OAAO;IAAC,SAAS,EAAC,QAAQ;IAAA,uBAC3C,QAAC,IAAI,CAAC,IAAI;MAAA,UAEFA,IAAI,KAAK,IAAI,gBAAG,QAAC,IAAI,CAAC,IAAI;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAY,gBAClD,QAAC,QAAQ;QAAA,wBACL,QAAC,IAAI,CAAC,KAAK;UAAA,UAAEA,IAAI,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAc,eACpC,QAAC,IAAI,CAAC,QAAQ;UAAA,UAAED,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC3C;UAAA,UAAIF,IAAI,CAACG,MAAM,CAACF;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACzB;UAAA,WAAG,OAAK,EAACD,IAAI,CAACG,MAAM,CAACC,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC7B;UAAA,UAAG;QAAwB;UAAA;UAAA;UAAA;QAAA,QAAI,eAC/B;UAAA,UACKJ,IAAI,CAACG,MAAM,CAACE,KAAK,CAACC,GAAG,CAACN,IAAI,iBAAI;YAAA,UAAmBA,IAAI,CAACC;UAAI,GAAnBD,IAAI,CAACL,EAAE;YAAA;YAAA;YAAA;UAAA,QAAkB;QAAC;UAAA;UAAA;UAAA;QAAA,QACjE,eACL,QAAC,MAAM;UAAC,SAAS,EAAC,aAAa;UAAC,OAAO,EAAC,MAAM;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC5D;MAAA;MAAA;MAAA;IAAA;EAEP;IAAA;IAAA;IAAA;EAAA,QACT;AAEf,CAAC;AAAA,GApCKN,WAAW;EAAA,QACkBN,QAAQ;AAAA;AAAA,KADrCM,WAAW;AAsCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}