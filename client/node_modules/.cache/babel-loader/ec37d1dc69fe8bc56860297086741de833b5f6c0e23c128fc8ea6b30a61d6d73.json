{"ast":null,"code":"/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  var tagName;\n  if (i === -1) {\n    tagName = html.slice(1, -1);\n  } else {\n    tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\" || currentPos === len - 1) {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(tagStart, rethtml.length, currentTagName, currentHtml, isClosing(currentHtml));\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < len) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n  return rethtml;\n}\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9\\\\_:.-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var lastMarkPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      lastMarkPos = html.charAt(lastPos) === '\"' || html.charAt(lastPos) === \"'\" ? lastPos : findNextQuotationMark(html, i + 1);\n      continue;\n    }\n    if (tmpName !== false) {\n      if (i === lastMarkPos) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastMarkPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n  return _.trim(retAttrs.join(\" \"));\n}\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\nfunction findNextQuotationMark(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"'\" || c === '\"') return i;\n    return -1;\n  }\n}\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\nfunction isQuoteWrapString(text) {\n  if (text[0] === '\"' && text[text.length - 1] === '\"' || text[0] === \"'\" && text[text.length - 1] === \"'\") {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;","map":{"version":3,"names":["_","require","getTagName","html","i","spaceIndex","tagName","slice","trim","toLowerCase","isClosing","parseTag","onTag","escapeHtml","rethtml","lastPos","tagStart","quoteStart","currentPos","len","length","currentTagName","currentHtml","chariterator","c","charAt","ic","substr","REGEXP_ILLEGAL_ATTR_NAME","parseAttr","onAttr","lastMarkPos","retAttrs","tmpName","addAttr","name","value","replace","ret","push","v","j","findNextQuotationMark","indexOf","test","findNextEqual","findBeforeEqual","stripQuoteWrap","join","str","isQuoteWrapString","text","exports"],"sources":["C:/Users/Admin/Documents/Web/GRAPHQL/node_modules/xss/lib/parser.js"],"sourcesContent":["/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  var tagName;\n  if (i === -1) {\n    tagName = html.slice(1, -1);\n  } else {\n    tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\" || currentPos === len - 1) {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < len) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9\\\\_:.-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var lastMarkPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      lastMarkPos = html.charAt(lastPos) === '\"' || html.charAt(lastPos) === \"'\" ? lastPos : findNextQuotationMark(html, i + 1);\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastMarkPos\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastMarkPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findNextQuotationMark(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"'\" || c === '\"') return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}